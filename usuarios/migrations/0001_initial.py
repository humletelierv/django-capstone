# Generated by Django 4.2.16 on 2024-11-25 03:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InfoAnalisis',
            fields=[
                ('batch', models.IntegerField(primary_key=True, serialize=False)),
                ('id_estado', models.IntegerField()),
                ('id_tipo_malta', models.IntegerField()),
                ('fecha_produccion', models.DateField()),
                ('fecha_analisis', models.DateField()),
                ('id_cliente', models.IntegerField()),
                ('id_tipo_horno', models.IntegerField()),
                ('proceso_tag', models.CharField(max_length=2)),
                ('id_variedad', models.IntegerField()),
                ('silo_origen', models.CharField(max_length=80)),
                ('silo_destino_1', models.CharField(max_length=40)),
                ('malta_limpia', models.IntegerField()),
                ('humedad', models.FloatField()),
                ('tipo_sacarificacion', models.FloatField()),
                ('ext_fino_ss', models.FloatField()),
                ('ext_gru_ss', models.FloatField()),
                ('fan', models.FloatField()),
                ('id_analista', models.IntegerField()),
            ],
            options={
                'db_table': 'INFO_ANALISIS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoGerm',
            fields=[
                ('cod_germ', models.IntegerField(primary_key=True, serialize=False)),
                ('batch', models.IntegerField()),
                ('dia', models.IntegerField()),
                ('hora', models.IntegerField()),
                ('rociador', models.IntegerField()),
                ('tretorno', models.IntegerField()),
                ('texterior', models.IntegerField()),
                ('tinferior', models.IntegerField()),
                ('tsuperior', models.IntegerField()),
                ('cajongerminacion', models.IntegerField()),
                ('horareloj', models.CharField(max_length=20)),
                ('fecha', models.DateField()),
            ],
            options={
                'db_table': 'INFO_GERM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoHorno',
            fields=[
                ('batch', models.CharField(max_length=22, primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('variedad', models.CharField(max_length=40)),
                ('temp_sobre_grano', models.FloatField()),
                ('temp_bajo_tela', models.FloatField()),
                ('temp_ambiente', models.FloatField()),
                ('hr_sobre_tela', models.FloatField()),
                ('p_apertura_damper', models.FloatField()),
                ('presion_diferencial', models.FloatField()),
                ('gas_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_3', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_4', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_5', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gas_et_6', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e3', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e4', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e5', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo_barra_e6', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_1', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_2', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_3', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_4', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_5', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sp_temp_6', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'INFO_HORNO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoProduccion',
            fields=[
                ('batch', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('fecha_horneo', models.DateField()),
                ('id_tipo_horno', models.PositiveIntegerField()),
                ('tipo_variedad', models.CharField(max_length=60)),
                ('id_tipo_malta', models.PositiveIntegerField()),
                ('cebada_sucia', models.FloatField()),
                ('impureza', models.PositiveIntegerField()),
                ('polvo', models.PositiveIntegerField()),
                ('cebada_limpia', models.FloatField()),
                ('malta_sucia', models.PositiveIntegerField()),
                ('brote', models.PositiveIntegerField()),
                ('malta_limpia', models.PositiveIntegerField()),
                ('malta_verde', models.PositiveIntegerField()),
                ('materiaseca', models.PositiveIntegerField()),
                ('malta_equivalente', models.PositiveIntegerField()),
                ('fecha_volteo', models.DateField()),
                ('fecha_pulido', models.DateField()),
                ('electricidad', models.PositiveIntegerField()),
                ('gas', models.PositiveIntegerField()),
                ('agua', models.PositiveIntegerField()),
                ('cs_cl', models.FloatField()),
                ('cl_ml', models.FloatField()),
                ('brote_ml', models.PositiveIntegerField()),
                ('ms_ml', models.FloatField()),
                ('cs_ml', models.FloatField()),
                ('cl_ms', models.FloatField()),
                ('factor_perdida_humedad', models.FloatField()),
                ('factor_perdida_conversion', models.FloatField()),
                ('kg_perdida_humedad', models.PositiveIntegerField()),
                ('kg_perdida_conversion', models.PositiveIntegerField()),
                ('kg_destino_2', models.PositiveIntegerField()),
                ('silo_destino_2', models.PositiveIntegerField()),
                ('kg_destino_1', models.PositiveIntegerField()),
                ('silo_destino_1', models.PositiveIntegerField()),
                ('kg_silo_origen_1', models.PositiveIntegerField()),
                ('silo_origen_1', models.PositiveIntegerField()),
                ('kg_silo_origen_2', models.PositiveIntegerField()),
                ('silo_origen_2', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name': 'Informaci贸n de Producci贸n',
                'verbose_name_plural': 'Informaci贸n de Producci贸n',
                'db_table': 'INFO_PRODUCCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoTina',
            fields=[
                ('cod_tina', models.IntegerField(primary_key=True, serialize=False)),
                ('batch', models.IntegerField()),
                ('fecha', models.DateField()),
                ('hora', models.CharField(max_length=20)),
                ('temptina1', models.IntegerField()),
                ('temptina2', models.IntegerField()),
                ('id_estado_tina', models.IntegerField()),
            ],
            options={
                'db_table': 'INFO_TINA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=20, unique=True)),
                ('role', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
